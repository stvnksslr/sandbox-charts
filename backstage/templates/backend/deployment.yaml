apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "backstage.backendFullname" . }}
  labels:
    {{- include "backstage.backendLabels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      {{- include "backstage.backendSelectorLabels" . | nindent 6 }}
  template:
    metadata:
      annotations:
        checksum/config: {{ .Values.appConfig | toYaml | sha256sum }}
    {{- with .Values.backend.podAnnotations }}
        {{- toYaml . | nindent 8 }}
    {{- end }}
      labels:
        {{- include "backstage.backendSelectorLabels" . | nindent 8 }}
      {{- with .Values.backend.podLabels }}
        {{- toYaml . | nindent 8 }}
      {{- end }}
    spec:
      {{- if .Values.dockerRegistrySecretName }}
      imagePullSecrets:
        - name: {{ .Values.dockerRegistrySecretName }}
      {{- end}}
      serviceAccountName: {{ include "backstage.backendServiceAccountName" . }}
      {{- with .Values.backend.podSecurityContext }}
      securityContext:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.priorityClassName }}
      priorityClassName: {{ . | quote }}
      {{- end }}
      containers:
        - name: backstage
          {{- with .Values.backend.securityContext }}
          securityContext:
            {{- toYaml . | nindent 12 }}
          {{- end }}
          image: {{ include "backstage.backendImage" . }}
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          env:
            {{- if .Values.postgresql.enabled }}
            - name: POSTGRES_HOST
              value: {{ include "backstage.postgresql.fullname" . | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.postgresql.primary.service.ports.postgresql | default "5432" | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.auth.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if .Values.postgresql.existingSecret }}
                  name:  {{ .Values.postgresql.existingSecret }}
                  {{- else }}
                  name:  {{ include "backstage.postgresql.fullname" . }}
                  {{- end }}
                  key: password
            {{- else if .Values.psql }}
            - name: POSTGRES_HOST
              value: {{ .Values.psql.host | quote }}
            - name: POSTGRES_PORT
              value: {{ .Values.psql.port | default "5432" | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.psql.username | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.psql.password.secret }}
                  key: {{ .Values.psql.password.key }}
            {{- end }}
            {{- with .Values.backend.env }}
            {{- toYaml . | nindent 12 }}
            {{- end }}
          ports:
            - name: http
              containerPort: {{ .Values.appConfig.backend.listen.port | default 7007 }}
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          volumeMounts:
            - mountPath: /app/app-config.yaml
              name: config
              subPath: app-config.yaml
          {{- with .Values.backend.resources }}
          resources:
            {{- toYaml . | nindent 12 }}
          {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "backstage.backendConfigName" . }}
      {{- with .Values.backend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.backend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
