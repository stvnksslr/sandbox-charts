suite: test backend pdb
templates:
  - ./backend/pdb.yaml
tests:

  - it: should work if 1.21 with policy/v1
    set:
      backend.podDisruptionBudget.enabled: true
    capabilities:
      majorVersion: 1
      minorVersion: 21
      apiVersions:
        - policy/v1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodDisruptionBudget
      - isAPIVersion:
          of: policy/v1
      - equal:
          path: spec.selector.matchLabels
          value:
            app.kubernetes.io/component: backend
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: backstage
      - isNull:
          path: spec.minUnavailable
      - isNull:
          path: spec.maxUnavailable

  - it: should work if 1.20 with policy/v1beta1
    set:
      backend.podDisruptionBudget.enabled: true
    capabilities:
      majorVersion: 1
      minorVersion: 20
      apiVersions:
        - policy/v1beta1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodDisruptionBudget
      - isAPIVersion:
          of: policy/v1beta1
      - equal:
          path: spec.selector.matchLabels
          value:
            app.kubernetes.io/component: backend
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: backstage
      - isNull:
          path: spec.minUnavailable
      - isNull:
          path: spec.maxUnavailable

  - it: should set minAvailable when provided
    set:
      backend.podDisruptionBudget.enabled: true
      backend.podDisruptionBudget.minAvailable: 1
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: metadata.name
          value: RELEASE-NAME-backstage-backend
      - equal:
          path: spec.selector.matchLabels
          value:
            app.kubernetes.io/component: backend
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: backstage
      - equal:
          path: spec.minAvailable
          value: 1
      - isNull:
          path: spec.maxUnavailable

  - it: should set maxUnavailable when provided
    set:
      backend.podDisruptionBudget.enabled: true
      backend.podDisruptionBudget.maxUnavailable: 2
    asserts:
      - hasDocuments:
          count: 1
      - isKind:
          of: PodDisruptionBudget
      - equal:
          path: metadata.name
          value: RELEASE-NAME-backstage-backend
      - equal:
          path: spec.selector.matchLabels
          value:
            app.kubernetes.io/component: backend
            app.kubernetes.io/instance: RELEASE-NAME
            app.kubernetes.io/name: backstage
      - equal:
          path: spec.maxUnavailable
          value: 2
      - isNull:
          path: spec.minAvailable

  - it: should render nothing if not enabled
    asserts:
      - hasDocuments:
          count: 0
