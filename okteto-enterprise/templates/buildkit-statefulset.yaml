{{- if .Values.buildkit.enabled }}
{{- $publicUrl := include "okteto.public" . -}}
{{- $registryUrl :=  include "okteto.registry"  . }}
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: "{{ include "okteto.buildkitname" . }}"
  labels:
    app.kubernetes.io/component: "buildkit"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/name: "{{ include "okteto.buildkitname" . }}"
    helm.sh/chart: {{ include "okteto.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    secret.reloader.stakater.com/reload: "{{ include "okteto.tlsSecretsToReload" . }}"
spec:
  replicas: {{ .Values.buildkit.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "okteto.buildkitname" . }}"
      app.kubernetes.io/instance: {{ .Release.Name }}
  serviceName: {{ include "okteto.fullname" . }}-buildkit
  podManagementPolicy: {{ .Values.buildkit.podManagementPolicy }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "okteto.buildkitname" . }}"
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "buildkit"
        app.kubernetes.io/part-of: "okteto"
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
{{- if .Values.buildkit.labels }}
{{ toYaml .Values.buildkit.labels | indent 8 }}
{{- end }}
{{- if or .Values.podAnnotations .Values.annotations .Values.buildkit.rootless.enabled }}
      annotations:
  {{- if .Values.buildkit.rootless.enabled }}
        container.apparmor.security.beta.kubernetes.io/buildkitd: unconfined
        container.seccomp.security.alpha.kubernetes.io/buildkitd: unconfined
  {{- end }}
  {{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
  {{- end }}
  {{- if .Values.buildkit.annotations }}
{{ toYaml .Values.buildkit.annotations | indent 8 }}
  {{- end }}
{{- end }}
    spec:
      affinity:
        podAntiAffinity:
          {{- if .Values.affinity.required }}
          requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                  - key: app.kubernetes.io/name
                    operator: In
                    values:
                      - "{{ include "okteto.buildkitname" . }}"
              topologyKey: kubernetes.io/hostname
          {{- else }}
          preferredDuringSchedulingIgnoredDuringExecution:
            - weight: 100
              podAffinityTerm:
                labelSelector:
                  matchExpressions:
                    - key: app.kubernetes.io/name
                      operator: In
                      values:
                        - "{{ include "okteto.buildkitname" . }}"
                topologyKey: kubernetes.io/hostname
          {{- end }}
      serviceAccountName: default
      {{- if .Values.tolerations.buildPool }}
      tolerations:
      - key: "okteto-node-pool"
        operator: "Equal"
        value: "{{ .Values.tolerations.buildPool }}"
        effect: "NoSchedule"
      nodeSelector:
        okteto-node-pool: "{{ .Values.tolerations.buildPool }}"
      {{- end }}
      volumes:
        - name: tls-certs
          secret:
            defaultMode: 420
            secretName: {{ include "okteto.ingress.tlsSecret" . }}
        {{- if .Values.wildcardCertificate.privateCA.enabled }}
        - name: ca-pemstore
          secret:
            defaultMode: 420
            secretName: {{ .Values.wildcardCertificate.privateCA.secret.name }}
        {{- end }}
        {{- if .Values.buildkit.storage.localSSD }}
        - name: storage
          hostPath:
            path: "/mnt/disks/ssd0"
        {{- end }}
      containers:
      - name: buildkitd
      {{- if .Values.buildkit.rootless.enabled }}
        image: {{ .Values.buildkit.rootless.image.registry}}:{{ .Values.buildkit.rootless.image.tag}}
      {{- else }}
        image: {{ .Values.buildkit.image.registry}}:{{ .Values.buildkit.image.tag}}
        imagePullPolicy: {{ .Values.pullPolicy }}
      {{- end }}
        readinessProbe:
          exec:
            command:
              - buildctl
              - --addr
              - "tcp://local-buildkitd.{{ .Values.subdomain }}:1234"
              - --tlscacert
       {{- if .Values.wildcardCertificate.privateCA.enabled }}
              - /etc/ssl/certs/okteto-private-ca.crt
       {{- else }}
              - /etc/ssl/certs/ca-certificates.crt
       {{- end }}
              - debug
              - workers
          initialDelaySeconds: 5
          periodSeconds: 30
          timeoutSeconds: 10
        livenessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              {{- if .Values.buildkit.rootless.enabled }}
              - "if [ $(df -Ph /home/user/.local/share/buildkit | awk {'print $5'} | grep -vE Capacity | cut -f1 -d '%') -gt 80 ]; then exit 1; fi"
              {{- else }}
              - "if [ $(df -Ph /var/lib/buildkit | awk {'print $5'} | grep -vE Capacity | cut -f1 -d '%') -gt 80 ]; then exit 1; fi"
              {{- end }}
          timeoutSeconds: 5
          initialDelaySeconds: 300
          periodSeconds: 30
          failureThreshold: 1
        command:
          - /usr/bin/start.sh
        env:
          - name: OKTETO_BUILDKITD_LOCAL_URL
            value: local-buildkitd.{{ .Values.subdomain }}
          - name: OKTETO_INGRESS_INTERNAL_IP
            value: "{{ include "okteto.ingressprivateip" . }}"
          - name: PUBLIC_URL
            value: "{{ $publicUrl }}"
          - name: REGISTRY_URL
            value: "{{ $registryUrl }}"
          - name: STORAGE
            value: "{{ .Values.buildkit.storage.cache}}"
        ports:
        - containerPort: 1234
          protocol: TCP
        securityContext:
        {{- if .Values.buildkit.rootless.enabled }}
          procMount: Unmasked
        {{- end }}
          privileged: true
        volumeMounts:
          - name: "storage"
            subPath: data
          {{- if .Values.buildkit.rootless.enabled }}
            mountPath: /home/user/.local/share/buildkit
          {{- else }}
            mountPath: /var/lib/buildkit
          {{- end }}
          - name: tls-certs
            mountPath: /run/secrets/tls
            readOnly: true
          {{- if .Values.wildcardCertificate.privateCA.enabled }}
          - name: ca-pemstore
            mountPath: /etc/ssl/certs/okteto-private-ca.crt
            subPath:  {{ .Values.wildcardCertificate.privateCA.secret.key }}
            readOnly: true
          {{- end }}
        resources:
{{ toYaml .Values.buildkit.resources | indent 12 }}
      dnsPolicy: ClusterFirst
      restartPolicy: Always
    {{- if .Values.buildkit.rootless.enabled }}
      securityContext:
        fsGroup: 1000
    {{- end }}
      terminationGracePeriodSeconds: 30
  {{- if not .Values.buildkit.storage.localSSD }}
  volumeClaimTemplates:
    - metadata:
        name: "storage"
      spec:
        accessModes: {{ .Values.buildkit.storage.accessModes}}
        resources:
          requests:
            storage: {{ .Values.buildkit.storage.size }}
        {{- if .Values.buildkit.storage.class }}
        storageClassName: {{ .Values.buildkit.storage.class }}
       {{- end }}
  {{- end }}
{{- end }}
