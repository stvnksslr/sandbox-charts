{{- if eq (include "okteto.installDaemonset" .) "true" }}
{{- $registryUrl :=  include "okteto.registry"  . }}
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: "{{ include "okteto.fullname" . }}-daemon"
  labels:
    app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-daemon"
    helm.sh/chart: {{ include "okteto.chart" . }}
    app.kubernetes.io/component: "daemon"
    app.kubernetes.io/part-of: "okteto"
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
  annotations:
    secret.reloader.stakater.com/reload: "{{ include "okteto.fullname" . }}-dockerconfig-root"
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-daemon"
      app.kubernetes.io/instance: {{ .Release.Name }}
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 100%
  template:
    metadata:
      labels:
        app.kubernetes.io/name: "{{ include "okteto.fullname" . }}-daemon"
        app.kubernetes.io/instance: {{ .Release.Name }}
        app.kubernetes.io/component: "daemon"
        app.kubernetes.io/part-of: "okteto"
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
      annotations:
        app.kubernetes.io/version: "{{ .Release.Name }}-{{ .Chart.Name }}-{{ .Chart.Version }}"
        checksum/secrets: {{ include (print $.Template.BasePath "/dockerconfig-secret.yaml") . | sha256sum }}
{{- if .Values.podAnnotations }}
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
    spec:
      hostPID: true
      terminationGracePeriodSeconds: 0
      serviceAccountName: {{ include "okteto.fullname" . }}
      {{- if .Values.tolerations.devPool }}
      tolerations:
        - key: "okteto-node-pool"
          operator: "Equal"
          value: "{{ .Values.tolerations.devPool }}"
          effect: "NoSchedule"
      nodeSelector:
        okteto-node-pool: "{{ .Values.tolerations.devPool }}"
      {{- end }}
      initContainers:
      {{- if .Values.backend.bin.image }}
      - name: bin
        image: {{ .Values.backend.bin.image }}
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - "cp /usr/local/bin/* /var/okteto/bin"
        volumeMounts:
          - mountPath: /var/okteto/bin
            name: okteto-bin
      {{- end }}
      {{- if .Values.injectDevelopmentBinaries.enabled }}
      - name: cloudbin
        image: {{ .Values.backend.cloudbin.image }}
        securityContext:
          privileged: true
        command:
          - /bin/sh
          - -c
          - "rm -f /var/okteto/cloudbin/start.sh && cp /usr/local/bin/* /var/okteto/cloudbin"
        volumeMounts:
          - mountPath: /var/okteto/cloudbin
            name: okteto-cloudbin
      {{- end }}
      containers:
      - name: daemon
        image: {{ .Values.daemonset.image }}
        imagePullPolicy: {{ .Values.pullPolicy }}
        securityContext:
          privileged: true
        env:
          - name: UPDATE_REGISTRY_DISABLED
            value: "{{ not .Values.overrideRegistryResolution.enabled }}"
          - name: UPDATE_REGISTRY_HOST_INGRESS_INTERNAL_IP
            value: "{{ include "okteto.ingressprivateip" . }}"
          - name: UPDATE_REGISTRY_HOST_OKTETO_REGISTRY_URL
            value: "{{ $registryUrl }}"
          - name: PRIVATE_REGISTRY_CREDENTIALS_DISABLED
            value: "{{ not .Values.privateRegistry }}"
          - name: PRIVATE_REGISTRY_CREDENTIALS_ROOT_SECRET_NAME
            value: "{{ include "okteto.fullname" . }}-dockerconfig-root"
          - name: PRIVATE_REGISTRY_CREDENTIALS_DESTINATION_PATH
            value: "/var/lib/kubelet/config.json"
          - name: PRIVATE_REGISTRY_CREDENTIALS_SECRET_NAME
            value: "{{ include "okteto.fullname" . }}-dockerconfig"
          - name: SYSCTL_CONFIG_DISABLED
            value: "{{ not .Values.overrideFileWatchers.enabled }}"
          - name: SYSCTL_CONFIG_MAX_USER_WATCHES
            value: "{{ int .Values.overrideFileWatchers.maxUserWatches }}"
          - name: SYSCTL_CONFIG_MAX_MAP_COUNT
            value: "{{ int .Values.overrideFileWatchers.maxMapCount }}"
          - name: SYSCTL_CONFIG_AIO_MAX_NR
            value: "{{ int .Values.overrideFileWatchers.aioMaxNR }}"
          - name: COPY_BIN_DISABLED
            value: "true"
          - name: COPY_CLOUDBIN_DISABLED
            value: "true"
          - name: CHECK_CNI_PLUGIN_DISABLED
            value: "{{ not .Values.checkCNIPodHealth.enabled }}"
          - name: CHECK_CNI_PLUGIN_NODE_NAME
            valueFrom:
              fieldRef:
                fieldPath: spec.nodeName
          {{- if .Values.checkCNIPodHealth.enabled }}
          - name: CHECK_CNI_PLUGIN_RESTART_COUNT_THRESHOLD
            value: "{{ .Values.checkCNIPodHealth.restartCountThreshold }}"
          - name: CHECK_CNI_PLUGIN_SLACK_WEBHOOK
            value: "{{ .Values.checkCNIPodHealth.slackWebhook }}"
          - name: CHECK_CNI_PLUGIN_PUBLIC_DOMAIN
            value: "{{ include "okteto.public" . }}"
          - name: CHECK_CNI_PLUGIN_BACK_OFF_INTERNAL_IN_MINUTES
            value: "{{ .Values.checkCNIPodHealth.backOffIntervalInMinutes }}"
          {{- end }}
        volumeMounts:
          {{- if .Values.overrideRegistryResolution.enabled }}
          - name: hostalias
            mountPath: /etc/hosts
          {{- end }}
          {{- if .Values.privateRegistry }}
          - name: kubelet-conf
            mountPath: /var/lib/kubelet
          {{- end }}
          {{- if .Values.overrideFileWatchers.enabled }}
          - name: proc-volume
            mountPath: /proc-aux
          {{- end }}
      volumes:
      {{- if .Values.backend.bin.image }}
      - name: okteto-bin
        hostPath:
          path: /var/okteto/bin
      {{- end }}
      {{- if .Values.injectDevelopmentBinaries.enabled }}
      - name: okteto-cloudbin
        hostPath:
          path: /var/okteto/cloudbin
      {{- end }}
      {{- if .Values.privateRegistry }}
      - name: kubelet-conf
        hostPath:
          path: /var/lib/kubelet
      {{- end }}
      {{- if .Values.overrideRegistryResolution.enabled }}
      - name: hostalias
        hostPath:
          path: /etc/hosts
      {{- end }}
      {{- if .Values.overrideFileWatchers.enabled }}
      - name: proc-volume
        hostPath:
          path: /proc
      {{- end }}
      {{- if .Values.prepullImages.enabled }}
      - name: dockersock
        hostPath:
          path: /var/run/docker.sock
      {{- end }}
{{- end}}